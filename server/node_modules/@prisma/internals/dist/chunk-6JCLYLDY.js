"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var chunk_6JCLYLDY_exports = {};
__export(chunk_6JCLYLDY_exports, {
  arg: () => arg,
  format: () => format,
  isError: () => isError
});
module.exports = __toCommonJS(chunk_6JCLYLDY_exports);
var import_chunk_CTBG5EFY = require("./chunk-CTBG5EFY.js");
var import_arg = __toESM(require("arg"));
var require_min_indent = (0, import_chunk_CTBG5EFY.__commonJS)({
  "../../node_modules/.pnpm/min-indent@1.0.1/node_modules/min-indent/index.js"(exports, module2) {
    "use strict";
    module2.exports = (string) => {
      const match = string.match(/^[ \t]*(?=\S)/gm);
      if (!match) {
        return 0;
      }
      return match.reduce((r, a) => Math.min(r, a.length), Infinity);
    };
  }
});
var require_strip_indent = (0, import_chunk_CTBG5EFY.__commonJS)({
  "../../node_modules/.pnpm/strip-indent@3.0.0/node_modules/strip-indent/index.js"(exports, module2) {
    "use strict";
    var minIndent = require_min_indent();
    module2.exports = (string) => {
      const indent = minIndent(string);
      if (indent === 0) {
        return string;
      }
      const regex = new RegExp(`^[ \\t]{${indent}}`, "gm");
      return string.replace(regex, "");
    };
  }
});
var import_strip_indent = (0, import_chunk_CTBG5EFY.__toESM)(require_strip_indent());
function format(input = "") {
  return (0, import_strip_indent.default)(input).trimRight() + "\n";
}
function arg(argv, spec, stopAtPositional = true, permissive = false) {
  try {
    return (0, import_arg.default)(spec, { argv, stopAtPositional, permissive });
  } catch (e) {
    return e;
  }
}
function isError(result) {
  return result instanceof Error;
}
