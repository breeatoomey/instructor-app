"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.clone = exports.isAutoIncrementIdField = exports.isUnsafeMutate = exports.prismaClientUnknownRequestError = exports.prismaClientKnownRequestError = exports.prismaClientValidationError = exports.formatObject = void 0;
const deepcopy_1 = __importDefault(require("deepcopy"));
const safe_json_stringify_1 = __importDefault(require("safe-json-stringify"));
const __1 = require("..");
/**
 * Formats an object for pretty printing.
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function formatObject(value, multiLine = true) {
    return multiLine ? (0, safe_json_stringify_1.default)(value, undefined, 2) : (0, safe_json_stringify_1.default)(value);
}
exports.formatObject = formatObject;
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function prismaClientValidationError(prisma, prismaModule, message) {
    throw new prismaModule.PrismaClientValidationError(message, { clientVersion: prisma._clientVersion });
}
exports.prismaClientValidationError = prismaClientValidationError;
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function prismaClientKnownRequestError(prisma, prismaModule, ...args) {
    return new prismaModule.PrismaClientKnownRequestError(...args);
}
exports.prismaClientKnownRequestError = prismaClientKnownRequestError;
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function prismaClientUnknownRequestError(prismaModule, ...args) {
    throw new prismaModule.PrismaClientUnknownRequestError(...args);
}
exports.prismaClientUnknownRequestError = prismaClientUnknownRequestError;
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function isUnsafeMutate(model, args, modelMeta) {
    if (!args) {
        return false;
    }
    for (const k of Object.keys(args)) {
        const field = (0, __1.resolveField)(modelMeta, model, k);
        if (field && (isAutoIncrementIdField(field) || field.isForeignKey)) {
            return true;
        }
    }
    return false;
}
exports.isUnsafeMutate = isUnsafeMutate;
function isAutoIncrementIdField(field) {
    return field.isId && field.isAutoIncrement;
}
exports.isAutoIncrementIdField = isAutoIncrementIdField;
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function clone(value) {
    return value ? (0, deepcopy_1.default)(value) : {};
}
exports.clone = clone;
//# sourceMappingURL=utils.js.map