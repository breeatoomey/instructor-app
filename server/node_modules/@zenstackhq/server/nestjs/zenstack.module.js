"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var ZenStackModule_1;
Object.defineProperty(exports, "__esModule", { value: true });
exports.ZenStackModule = exports.ENHANCED_PRISMA = void 0;
const common_1 = require("@nestjs/common");
/**
 * The default token used to export the enhanced Prisma service.
 */
exports.ENHANCED_PRISMA = 'ENHANCED_PRISMA';
/**
 * The ZenStack module for NestJS. The module exports an enhanced Prisma service,
 * by default with token {@link ENHANCED_PRISMA}.
 */
let ZenStackModule = ZenStackModule_1 = class ZenStackModule {
    /**
     * Registers the ZenStack module with the specified options.
     */
    static registerAsync(options) {
        var _a, _b, _c;
        return {
            module: ZenStackModule_1,
            global: options === null || options === void 0 ? void 0 : options.global,
            imports: options.imports,
            providers: [
                {
                    provide: (_a = options.exportToken) !== null && _a !== void 0 ? _a : exports.ENHANCED_PRISMA,
                    useFactory: (
                    // eslint-disable-next-line @typescript-eslint/no-explicit-any
                    ...args) => __awaiter(this, void 0, void 0, function* () {
                        const { getEnhancedPrisma } = yield options.useFactory(...args);
                        if (!getEnhancedPrisma) {
                            throw new Error('`getEnhancedPrisma` must be provided in the options');
                        }
                        // create a proxy to intercept all calls to the Prisma service and forward
                        // to the enhanced version
                        return new Proxy({}, {
                            get(_target, prop) {
                                // eslint-disable-next-line @typescript-eslint/no-explicit-any
                                const enhancedPrisma = getEnhancedPrisma();
                                if (!enhancedPrisma) {
                                    throw new Error('`getEnhancedPrisma` must return a valid Prisma client');
                                }
                                return enhancedPrisma[prop];
                            },
                        });
                    }),
                    inject: options.inject,
                },
                ...((_b = options.extraProviders) !== null && _b !== void 0 ? _b : []),
            ],
            exports: [(_c = options.exportToken) !== null && _c !== void 0 ? _c : exports.ENHANCED_PRISMA],
        };
    }
};
exports.ZenStackModule = ZenStackModule;
exports.ZenStackModule = ZenStackModule = ZenStackModule_1 = __decorate([
    (0, common_1.Module)({})
], ZenStackModule);
//# sourceMappingURL=zenstack.module.js.map