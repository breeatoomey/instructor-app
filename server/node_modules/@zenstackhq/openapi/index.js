"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.name = void 0;
const sdk_1 = require("@zenstackhq/sdk");
const rest_generator_1 = require("./rest-generator");
const rpc_generator_1 = require("./rpc-generator");
exports.name = 'OpenAPI';
const run = (model, options, dmmf) => __awaiter(void 0, void 0, void 0, function* () {
    if (!dmmf) {
        throw new Error('DMMF is required');
    }
    const flavor = options.flavor ? options.flavor : 'rpc';
    switch (flavor) {
        case 'rest':
            return new rest_generator_1.RESTfulOpenAPIGenerator(model, options, dmmf).generate();
        case 'rpc':
            return new rpc_generator_1.RPCOpenAPIGenerator(model, options, dmmf).generate();
        default:
            throw new sdk_1.PluginError(exports.name, `Unknown flavor: ${flavor}`);
    }
});
exports.default = run;
//# sourceMappingURL=index.js.map