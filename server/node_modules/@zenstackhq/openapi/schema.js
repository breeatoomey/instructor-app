"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SecuritySchemesSchema = void 0;
const zod_1 = __importDefault(require("zod"));
/**
 * Zod schema for OpenAPI security schemes: https://swagger.io/docs/specification/authentication/
 */
exports.SecuritySchemesSchema = zod_1.default.record(zod_1.default.union([
    zod_1.default.object({ type: zod_1.default.literal('http'), scheme: zod_1.default.literal('basic') }),
    zod_1.default.object({ type: zod_1.default.literal('http'), scheme: zod_1.default.literal('bearer'), bearerFormat: zod_1.default.string().optional() }),
    zod_1.default.object({
        type: zod_1.default.literal('apiKey'),
        in: zod_1.default.union([zod_1.default.literal('header'), zod_1.default.literal('query'), zod_1.default.literal('cookie')]),
        name: zod_1.default.string(),
    }),
    zod_1.default.object({
        type: zod_1.default.literal('oauth2'),
        description: zod_1.default.string(),
        flows: zod_1.default.object({
            authorizationCode: zod_1.default.object({
                authorizationUrl: zod_1.default.string(),
                tokenUrl: zod_1.default.string(),
                refreshUrl: zod_1.default.string(),
                scopes: zod_1.default.record(zod_1.default.string()),
            }),
            implicit: zod_1.default.object({
                authorizationUrl: zod_1.default.string(),
                refreshUrl: zod_1.default.string(),
                scopes: zod_1.default.record(zod_1.default.string()),
            }),
            password: zod_1.default.object({
                tokenUrl: zod_1.default.string(),
                refreshUrl: zod_1.default.string(),
                scopes: zod_1.default.record(zod_1.default.string()),
            }),
            clientCredentials: zod_1.default.object({
                tokenUrl: zod_1.default.string(),
                refreshUrl: zod_1.default.string(),
                scopes: zod_1.default.record(zod_1.default.string()),
            }),
        }),
    }),
]));
//# sourceMappingURL=schema.js.map