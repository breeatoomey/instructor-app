"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.generate = void 0;
const sdk_1 = require("@zenstackhq/sdk");
const path_1 = __importDefault(require("path"));
function generate(model, options, project, outDir) {
    return __awaiter(this, void 0, void 0, function* () {
        const outFile = path_1.default.join(outDir, 'model-meta.ts');
        const dataModels = (0, sdk_1.getDataModels)(model);
        // save ts files if requested explicitly or the user provided
        const preserveTsFiles = options.preserveTsFiles === true || !!options.output;
        yield (0, sdk_1.generateModelMeta)(project, dataModels, {
            output: outFile,
            generateAttributes: true,
            preserveTsFiles,
        });
    });
}
exports.generate = generate;
//# sourceMappingURL=index.js.map